//1. С помощью цикла while вывести все простые числа в промежутке от 0 до 100.

let n = 100;

nextPrime:
for (let i = 2; i <= n; i++) {
    for (let j = 2; j < i; j++) {
        if (i % j == 0) continue nextPrime;
    }
    console.log(i);
}

//---------------------------------------------------------------------------------------------

//2. С этого урока начинаем работать с функционалом интернет - магазина.
//Предположим, есть сущность корзины.Нужно реализовать функционал подсчета
//стоимости корзины в зависимости от находящихся в ней товаров.
//Товары в корзине хранятся в массиве.Задачи:
//a) Организовать такой массив для хранения товаров в корзине;
//b) Организовать функцию countBasketPrice, которая будет считать стоимость корзины.

let cart = [
    {
        name: "Шоколад",
        price: 130,
        currency: 'RUB',
        count: 2
    },
    {
        name: "Помидоры",
        price: 250,
        currency: 'RUB',
        count: 3
    },
    {
        name: "Мясо",
        price: 720,
        currency: 'RUB',
        count: 1
    },
    {
        name: "Хлеб",
        price: 50,
        currency: 'RUB',
        count: 2
    },
]

function cartPrice(cart) {
    let sum = 0
    for (let i = 0; i < cart.length; i++) {
        sum += cart[i].price * cart[i].count
    }
    return sum
}

console.log(cartPrice(cart))

//---------------------------------------------------------------------------------------------

//3. * Вывести с помощью цикла for числа от 0 до 9, не используя тело цикла.Выглядеть это должно так:
//for (…) {// здесь пусто}

'use strict';

for (a = 0; a < 10; console.log(a++)) { }

//---------------------------------------------------------------------------------------------

//4. * Нарисовать пирамиду с помощью console.log, как показано на рисунке, 
//только у вашей пирамиды должно быть 20 рядов, а не 5:

for (let r = 1; r <= 20; r++) {
    let s = ''
    for (let w = 1; w <= r; w++) {
        s += '*';
    }
    console.log(s);
};
